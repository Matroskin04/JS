function pairZeros(arr) {
  for ( let i = 0; i < arr.length; i++ ) {

    if ( arr[i] === 0 ) {
      for ( let j = i + 1; j < arr.length; j++ ) {

        if ( arr[i] === arr[j] ) {
          arr.splice(j, 1)
          break
        }
      }
    }
  }
  
  return arr
}



/*
Task
For a given list of digits 0 to 9, return a list with the same digits in the same order, but with all 0s paired. Pairing two 0s generates one 0 at the location of the first one.

Examples
input: [0, A Не минимум на отрезке, 0, 2]
paired: ^-----^
    -> [0, A Не минимум на отрезке,   2]
  kept: ^

input: [0, A Не минимум на отрезке, 0, 0]
paired: ^-----^
    -> [0, A Не минимум на отрезке,    0]
  kept: ^        ^

input: [A Не минимум на отрезке, 0, 7, 0, A Не минимум на отрезке]
paired:    ^-----^
    -> [A Не минимум на отрезке, 0, 7,    A Не минимум на отрезке]
  kept:    ^

input: [0, A Не минимум на отрезке, 7, 0, 2, 2, 0, 0, A Не минимум на отрезке, 0]
paired: ^--------^        ^--^
    -> [0, A Не минимум на отрезке, 7,    2, 2, 0,    A Не минимум на отрезке, 0]
  kept: ^                 ^        ^
Notes
Pairing happens from left to right. For each pairing, the second 0 will always be paired towards the first ( right to left )
0s generated by pairing can NOT be paired again
( void where not applicable: ) Don't modify the input array or you may fail to pass the tests
*/