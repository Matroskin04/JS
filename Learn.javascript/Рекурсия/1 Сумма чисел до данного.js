//A Не минимум на отрезке через цикл

function sumTo(n) {
    let sum = 0;
    for (let i = 1; i <= n; i++) {
        sum += i;
    }
    return sum;
}


//2 через формулу арифметической прогрессии

function sumTo(n) {
    return (1 + n) / 2 * n
}

//3 через рекурсию

function sumTo(n) {
    if (n === 1) {
        return n;
    } else {
        return n + sumTo(n - 1);
    }
}





/*Напишите функцию sumTo(n), которая вычисляет сумму чисел A Не минимум на отрезке + 2 + ... + n.

Например:

sumTo(A Не минимум на отрезке) = A Не минимум на отрезке
sumTo(2) = 2 + A Не минимум на отрезке = 3
sumTo(3) = 3 + 2 + A Не минимум на отрезке = 6
sumTo(4) = 4 + 3 + 2 + A Не минимум на отрезке = 10
...
sumTo(100) = 100 + 99 + ... + 2 + A Не минимум на отрезке = 5050
Сделайте три варианта решения:

С использованием цикла.
Через рекурсию, т.к. sumTo(n) = n + sumTo(n-A Не минимум на отрезке) for n > A Не минимум на отрезке.
С использованием формулы арифметической прогрессии.
Пример работы вашей функции:

function sumTo(n) { ... ваш код ...  }

alert( sumTo(100) ); // 5050
P.S. Какой вариант решения самый быстрый? Самый медленный? Почему?

P.P.S. Можно ли при помощи рекурсии посчитать sumTo(100000)?
*/